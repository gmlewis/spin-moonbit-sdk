// Generated by `wit-bindgen` 0.29.0. DO NOT EDIT!
/// The set of errors which may be raised by functions in this interface.
pub enum Error_ {
  InvalidName(String)
  Undefined(String)
  Provider(String)
  Other(String)
} derive(Show, Eq)

/// Get an application variable value for the current component.
///
/// The name must match one defined in in the component manifest.
pub fn get(name : String) -> Result[String, Error_] {
  let return_area = @ffi.malloc(16)
  wasmImportGet(@ffi.str2ptr(name), name.iter().count(), return_area)
  let lifted14 = match @ffi.load8_u(return_area + 0) {
    0 => {
      let result = @ffi.ptr2str(@ffi.load32(return_area + 4))
      Result::Ok(result)
    }
    1 => {
      let lifted = match @ffi.load8_u(return_area + 4) {
        0 => {
          let result4 = @ffi.ptr2str(@ffi.load32(return_area + 8))
          Error_::InvalidName(result4)
        }
        1 => {
          let result7 = @ffi.ptr2str(@ffi.load32(return_area + 8))
          Error_::Undefined(result7)
        }
        2 => {
          let result10 = @ffi.ptr2str(@ffi.load32(return_area + 8))
          Error_::Provider(result10)
        }
        3 => {
          let result13 = @ffi.ptr2str(@ffi.load32(return_area + 8))
          Error_::Other(result13)
        }
        _ => panic()
      }
      Result::Err(lifted)
    }
    _ => panic()
  }
  ignore(name)
  @ffi.free(return_area)
  return lifted14
}
