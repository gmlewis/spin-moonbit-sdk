package "gmlewis/spin-moonbit-sdk/interface/wasi/http/types"

import(
  "gmlewis/spin-moonbit-sdk/interface/wasi/io/error"
  "gmlewis/spin-moonbit-sdk/interface/wasi/io/poll"
  "gmlewis/spin-moonbit-sdk/interface/wasi/io/streams"
)

// Values
fn http_error_code(@error.Error_) -> ErrorCode?

// Types and methods
pub(all) struct DnsErrorPayload {
  rcode : String?
  info_code : UInt?
}
impl Eq for DnsErrorPayload
impl Show for DnsErrorPayload

pub(all) enum ErrorCode {
  DnsTimeout
  DnsError(DnsErrorPayload)
  DestinationNotFound
  DestinationUnavailable
  DestinationIpProhibited
  DestinationIpUnroutable
  ConnectionRefused
  ConnectionTerminated
  ConnectionTimeout
  ConnectionReadTimeout
  ConnectionWriteTimeout
  ConnectionLimitReached
  TlsProtocolError
  TlsCertificateError
  TlsAlertReceived(TlsAlertReceivedPayload)
  HttpRequestDenied
  HttpRequestLengthRequired
  HttpRequestBodySize(UInt64?)
  HttpRequestMethodInvalid
  HttpRequestUriInvalid
  HttpRequestUriTooLong
  HttpRequestHeaderSectionSize(UInt?)
  HttpRequestHeaderSize(FieldSizePayload?)
  HttpRequestTrailerSectionSize(UInt?)
  HttpRequestTrailerSize(FieldSizePayload)
  HttpResponseIncomplete
  HttpResponseHeaderSectionSize(UInt?)
  HttpResponseHeaderSize(FieldSizePayload)
  HttpResponseBodySize(UInt64?)
  HttpResponseTrailerSectionSize(UInt?)
  HttpResponseTrailerSize(FieldSizePayload)
  HttpResponseTransferCoding(String?)
  HttpResponseContentCoding(String?)
  HttpResponseTimeout
  HttpUpgradeFailed
  HttpProtocolError
  LoopDetected
  ConfigurationError
  InternalError(String?)
}
impl Eq for ErrorCode
impl Show for ErrorCode

pub(all) struct FieldSizePayload {
  field_name : String?
  field_size : UInt?
}
impl Eq for FieldSizePayload
impl Show for FieldSizePayload

pub(all) type Fields Int
impl Fields {
  append(Self, String, FixedArray[Byte]) -> Result[Unit, HeaderError]
  clone(Self) -> Self
  delete(Self, String) -> Result[Unit, HeaderError]
  drop(Self) -> Unit
  entries(Self) -> Array[(String, FixedArray[Byte])]
  fields() -> Self
  from_list(Array[(String, FixedArray[Byte])]) -> Result[Self, HeaderError]
  get(Self, String) -> Array[FixedArray[Byte]]
  has(Self, String) -> Bool
  set(Self, String, Array[FixedArray[Byte]]) -> Result[Unit, HeaderError]
}
impl Eq for Fields
impl Show for Fields

pub(all) type FutureIncomingResponse Int
impl FutureIncomingResponse {
  drop(Self) -> Unit
  get(Self) -> Result[Result[IncomingResponse, ErrorCode], Unit]?
  subscribe(Self) -> @poll.Pollable
}
impl Eq for FutureIncomingResponse
impl Show for FutureIncomingResponse

pub(all) type FutureTrailers Int
impl FutureTrailers {
  drop(Self) -> Unit
  get(Self) -> Result[Result[Fields?, ErrorCode], Unit]?
  subscribe(Self) -> @poll.Pollable
}
impl Eq for FutureTrailers
impl Show for FutureTrailers

pub(all) enum HeaderError {
  InvalidSyntax
  Forbidden
  Immutable
}
impl Eq for HeaderError
impl Show for HeaderError

pub(all) type IncomingBody Int
impl IncomingBody {
  drop(Self) -> Unit
  finish(Self) -> FutureTrailers
  stream(Self) -> Result[@streams.InputStream, Unit]
}
impl Eq for IncomingBody
impl Show for IncomingBody

pub(all) type IncomingRequest Int
impl IncomingRequest {
  authority(Self) -> String?
  consume(Self) -> Result[IncomingBody, Unit]
  drop(Self) -> Unit
  headers(Self) -> Fields
  method_(Self) -> Method
  path_with_query(Self) -> String?
  scheme(Self) -> Scheme?
}
impl Eq for IncomingRequest
impl Show for IncomingRequest

pub(all) type IncomingResponse Int
impl IncomingResponse {
  consume(Self) -> Result[IncomingBody, Unit]
  drop(Self) -> Unit
  headers(Self) -> Fields
  status(Self) -> UInt
}
impl Eq for IncomingResponse
impl Show for IncomingResponse

pub(all) enum Method {
  Get
  Head
  Post
  Put
  Delete
  Connect
  Options
  Trace
  Patch
  Other(String)
}
impl Eq for Method
impl Show for Method

pub(all) type OutgoingBody Int
impl OutgoingBody {
  drop(Self) -> Unit
  finish(Self, Fields?) -> Result[Unit, ErrorCode]
  write(Self) -> Result[@streams.OutputStream, Unit]
}
impl Eq for OutgoingBody
impl Show for OutgoingBody

pub(all) type OutgoingRequest Int
impl OutgoingRequest {
  authority(Self) -> String?
  body(Self) -> Result[OutgoingBody, Unit]
  drop(Self) -> Unit
  headers(Self) -> Fields
  method_(Self) -> Method
  outgoing_request(Fields) -> Self
  path_with_query(Self) -> String?
  scheme(Self) -> Scheme?
  set_authority(Self, String?) -> Result[Unit, Unit]
  set_method(Self, Method) -> Result[Unit, Unit]
  set_path_with_query(Self, String?) -> Result[Unit, Unit]
  set_scheme(Self, Scheme?) -> Result[Unit, Unit]
}
impl Eq for OutgoingRequest
impl Show for OutgoingRequest

pub(all) type OutgoingResponse Int
impl OutgoingResponse {
  body(Self) -> Result[OutgoingBody, Unit]
  drop(Self) -> Unit
  headers(Self) -> Fields
  outgoing_response(Fields) -> Self
  set_status_code(Self, UInt) -> Result[Unit, Unit]
  status_code(Self) -> UInt
}
impl Eq for OutgoingResponse
impl Show for OutgoingResponse

pub(all) type RequestOptions Int
impl RequestOptions {
  between_bytes_timeout(Self) -> UInt64?
  connect_timeout(Self) -> UInt64?
  drop(Self) -> Unit
  first_byte_timeout(Self) -> UInt64?
  request_options() -> Self
  set_between_bytes_timeout(Self, UInt64?) -> Result[Unit, Unit]
  set_connect_timeout(Self, UInt64?) -> Result[Unit, Unit]
  set_first_byte_timeout(Self, UInt64?) -> Result[Unit, Unit]
}
impl Eq for RequestOptions
impl Show for RequestOptions

pub(all) type ResponseOutparam Int
impl ResponseOutparam {
  drop(Self) -> Unit
  set(Self, Result[OutgoingResponse, ErrorCode]) -> Unit
}
impl Eq for ResponseOutparam
impl Show for ResponseOutparam

pub(all) enum Scheme {
  Http
  Https
  Other(String)
}
impl Eq for Scheme
impl Show for Scheme

pub(all) struct TlsAlertReceivedPayload {
  alert_id : Byte?
  alert_message : String?
}
impl Eq for TlsAlertReceivedPayload
impl Show for TlsAlertReceivedPayload

// Type aliases

// Traits

