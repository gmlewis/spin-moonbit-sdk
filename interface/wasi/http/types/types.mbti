// Generated using `moon info`, DON'T EDIT IT
package "gmlewis/spin-moonbit-sdk/interface/wasi/http/types"

import(
  "gmlewis/spin-moonbit-sdk/interface/wasi/io/error"
  "gmlewis/spin-moonbit-sdk/interface/wasi/io/poll"
  "gmlewis/spin-moonbit-sdk/interface/wasi/io/streams"
)

// Values
fn http_error_code(@error.Error_) -> ErrorCode?

// Errors

// Types and methods
pub(all) struct DnsErrorPayload {
  rcode : String?
  info_code : UInt?
}
impl Eq for DnsErrorPayload
impl Show for DnsErrorPayload

pub(all) enum ErrorCode {
  DnsTimeout
  DnsError(DnsErrorPayload)
  DestinationNotFound
  DestinationUnavailable
  DestinationIpProhibited
  DestinationIpUnroutable
  ConnectionRefused
  ConnectionTerminated
  ConnectionTimeout
  ConnectionReadTimeout
  ConnectionWriteTimeout
  ConnectionLimitReached
  TlsProtocolError
  TlsCertificateError
  TlsAlertReceived(TlsAlertReceivedPayload)
  HttpRequestDenied
  HttpRequestLengthRequired
  HttpRequestBodySize(UInt64?)
  HttpRequestMethodInvalid
  HttpRequestUriInvalid
  HttpRequestUriTooLong
  HttpRequestHeaderSectionSize(UInt?)
  HttpRequestHeaderSize(FieldSizePayload?)
  HttpRequestTrailerSectionSize(UInt?)
  HttpRequestTrailerSize(FieldSizePayload)
  HttpResponseIncomplete
  HttpResponseHeaderSectionSize(UInt?)
  HttpResponseHeaderSize(FieldSizePayload)
  HttpResponseBodySize(UInt64?)
  HttpResponseTrailerSectionSize(UInt?)
  HttpResponseTrailerSize(FieldSizePayload)
  HttpResponseTransferCoding(String?)
  HttpResponseContentCoding(String?)
  HttpResponseTimeout
  HttpUpgradeFailed
  HttpProtocolError
  LoopDetected
  ConfigurationError
  InternalError(String?)
}
impl Eq for ErrorCode
impl Show for ErrorCode

pub(all) struct FieldSizePayload {
  field_name : String?
  field_size : UInt?
}
impl Eq for FieldSizePayload
impl Show for FieldSizePayload

pub(all) type Fields Int
fn Fields::append(Self, String, FixedArray[Byte]) -> Result[Unit, HeaderError]
fn Fields::clone(Self) -> Self
fn Fields::delete(Self, String) -> Result[Unit, HeaderError]
fn Fields::drop(Self) -> Unit
fn Fields::entries(Self) -> Array[(String, FixedArray[Byte])]
fn Fields::fields() -> Self
fn Fields::from_list(Array[(String, FixedArray[Byte])]) -> Result[Self, HeaderError]
fn Fields::get(Self, String) -> Array[FixedArray[Byte]]
fn Fields::has(Self, String) -> Bool
fn Fields::inner(Self) -> Int
fn Fields::set(Self, String, Array[FixedArray[Byte]]) -> Result[Unit, HeaderError]
impl Eq for Fields
impl Show for Fields

pub(all) type FutureIncomingResponse Int
fn FutureIncomingResponse::drop(Self) -> Unit
fn FutureIncomingResponse::get(Self) -> Result[Result[IncomingResponse, ErrorCode], Unit]?
fn FutureIncomingResponse::inner(Self) -> Int
fn FutureIncomingResponse::subscribe(Self) -> @poll.Pollable
impl Eq for FutureIncomingResponse
impl Show for FutureIncomingResponse

pub(all) type FutureTrailers Int
fn FutureTrailers::drop(Self) -> Unit
fn FutureTrailers::get(Self) -> Result[Result[Fields?, ErrorCode], Unit]?
fn FutureTrailers::inner(Self) -> Int
fn FutureTrailers::subscribe(Self) -> @poll.Pollable
impl Eq for FutureTrailers
impl Show for FutureTrailers

pub(all) enum HeaderError {
  InvalidSyntax
  Forbidden
  Immutable
}
impl Eq for HeaderError
impl Show for HeaderError

pub(all) type IncomingBody Int
fn IncomingBody::drop(Self) -> Unit
fn IncomingBody::finish(Self) -> FutureTrailers
fn IncomingBody::inner(Self) -> Int
fn IncomingBody::stream(Self) -> Result[@streams.InputStream, Unit]
impl Eq for IncomingBody
impl Show for IncomingBody

pub(all) type IncomingRequest Int
fn IncomingRequest::authority(Self) -> String?
fn IncomingRequest::consume(Self) -> Result[IncomingBody, Unit]
fn IncomingRequest::drop(Self) -> Unit
fn IncomingRequest::headers(Self) -> Fields
fn IncomingRequest::inner(Self) -> Int
fn IncomingRequest::method_(Self) -> Method
fn IncomingRequest::path_with_query(Self) -> String?
fn IncomingRequest::scheme(Self) -> Scheme?
impl Eq for IncomingRequest
impl Show for IncomingRequest

pub(all) type IncomingResponse Int
fn IncomingResponse::consume(Self) -> Result[IncomingBody, Unit]
fn IncomingResponse::drop(Self) -> Unit
fn IncomingResponse::headers(Self) -> Fields
fn IncomingResponse::inner(Self) -> Int
fn IncomingResponse::status(Self) -> UInt
impl Eq for IncomingResponse
impl Show for IncomingResponse

pub(all) enum Method {
  Get
  Head
  Post
  Put
  Delete
  Connect
  Options
  Trace
  Patch
  Other(String)
}
impl Eq for Method
impl Show for Method

pub(all) type OutgoingBody Int
fn OutgoingBody::drop(Self) -> Unit
fn OutgoingBody::finish(Self, Fields?) -> Result[Unit, ErrorCode]
fn OutgoingBody::inner(Self) -> Int
fn OutgoingBody::write(Self) -> Result[@streams.OutputStream, Unit]
impl Eq for OutgoingBody
impl Show for OutgoingBody

pub(all) type OutgoingRequest Int
fn OutgoingRequest::authority(Self) -> String?
fn OutgoingRequest::body(Self) -> Result[OutgoingBody, Unit]
fn OutgoingRequest::drop(Self) -> Unit
fn OutgoingRequest::headers(Self) -> Fields
fn OutgoingRequest::inner(Self) -> Int
fn OutgoingRequest::method_(Self) -> Method
fn OutgoingRequest::outgoing_request(Fields) -> Self
fn OutgoingRequest::path_with_query(Self) -> String?
fn OutgoingRequest::scheme(Self) -> Scheme?
fn OutgoingRequest::set_authority(Self, String?) -> Result[Unit, Unit]
fn OutgoingRequest::set_method(Self, Method) -> Result[Unit, Unit]
fn OutgoingRequest::set_path_with_query(Self, String?) -> Result[Unit, Unit]
fn OutgoingRequest::set_scheme(Self, Scheme?) -> Result[Unit, Unit]
impl Eq for OutgoingRequest
impl Show for OutgoingRequest

pub(all) type OutgoingResponse Int
fn OutgoingResponse::body(Self) -> Result[OutgoingBody, Unit]
fn OutgoingResponse::drop(Self) -> Unit
fn OutgoingResponse::headers(Self) -> Fields
fn OutgoingResponse::inner(Self) -> Int
fn OutgoingResponse::outgoing_response(Fields) -> Self
fn OutgoingResponse::set_status_code(Self, UInt) -> Result[Unit, Unit]
fn OutgoingResponse::status_code(Self) -> UInt
impl Eq for OutgoingResponse
impl Show for OutgoingResponse

pub(all) type RequestOptions Int
fn RequestOptions::between_bytes_timeout(Self) -> UInt64?
fn RequestOptions::connect_timeout(Self) -> UInt64?
fn RequestOptions::drop(Self) -> Unit
fn RequestOptions::first_byte_timeout(Self) -> UInt64?
fn RequestOptions::inner(Self) -> Int
fn RequestOptions::request_options() -> Self
fn RequestOptions::set_between_bytes_timeout(Self, UInt64?) -> Result[Unit, Unit]
fn RequestOptions::set_connect_timeout(Self, UInt64?) -> Result[Unit, Unit]
fn RequestOptions::set_first_byte_timeout(Self, UInt64?) -> Result[Unit, Unit]
impl Eq for RequestOptions
impl Show for RequestOptions

pub(all) type ResponseOutparam Int
fn ResponseOutparam::drop(Self) -> Unit
fn ResponseOutparam::inner(Self) -> Int
fn ResponseOutparam::set(Self, Result[OutgoingResponse, ErrorCode]) -> Unit
impl Eq for ResponseOutparam
impl Show for ResponseOutparam

pub(all) enum Scheme {
  Http
  Https
  Other(String)
}
impl Eq for Scheme
impl Show for Scheme

pub(all) struct TlsAlertReceivedPayload {
  alert_id : Byte?
  alert_message : String?
}
impl Eq for TlsAlertReceivedPayload
impl Show for TlsAlertReceivedPayload

// Type aliases

// Traits

