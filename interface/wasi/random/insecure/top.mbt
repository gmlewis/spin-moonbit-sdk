// Generated by `wit-bindgen` 0.41.0. DO NOT EDIT!
///| Return `len` insecure pseudo-random bytes.
///
/// This function is not cryptographically secure. Do not use it for
/// anything related to security.
///
/// There are no requirements on the values of the returned bytes, however
/// implementations are encouraged to return evenly distributed values with
/// a long period.
pub fn get_insecure_random_bytes(len : UInt64) -> FixedArray[Byte] {
  let return_area = @ffi.malloc(8)
  wasmImportGetInsecureRandomBytes(len.reinterpret_as_int64(), return_area)
  let result = @ffi.ptr2bytes(
    @ffi.load32(return_area + 0),
    @ffi.load32(return_area + 4),
  )
  @ffi.free(return_area)
  return result
}

///| Return an insecure pseudo-random `u64` value.
///
/// This function returns the same type of pseudo-random data as
/// `get-insecure-random-bytes`, represented as a `u64`.
pub fn get_insecure_random_u64() -> UInt64 {
  let result : Int64 = wasmImportGetInsecureRandomU64()
  return result.reinterpret_as_uint64()
}
