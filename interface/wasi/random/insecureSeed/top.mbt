// Generated by `wit-bindgen` 0.41.0. DO NOT EDIT!
///| Return a 128-bit value that may contain a pseudo-random value.
///
/// The returned value is not required to be computed from a CSPRNG, and may
/// even be entirely deterministic. Host implementations are encouraged to
/// provide pseudo-random values to any program exposed to
/// attacker-controlled content, to enable DoS protection built into many
/// languages' hash-map implementations.
///
/// This function is intended to only be called once, by a source language
/// to initialize Denial Of Service (DoS) protection in its hash-map
/// implementation.
///
/// # Expected future evolution
///
/// This will likely be changed to a value import, to prevent it from being
/// called multiple times and potentially used for purposes other than DoS
/// protection.
pub fn insecure_seed() -> (UInt64, UInt64) {
  let return_area = @ffi.malloc(16)
  wasmImportInsecureSeed(return_area)
  @ffi.free(return_area)
  return (
    @ffi.load64(return_area + 0).reinterpret_as_uint64(),
    @ffi.load64(return_area + 8).reinterpret_as_uint64(),
  )
}
