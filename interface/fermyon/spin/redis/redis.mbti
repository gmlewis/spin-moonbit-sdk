package "gmlewis/spin-moonbit-sdk/interface/fermyon/spin/redis"

// Values

// Types and methods
pub(all) type Connection Int
impl Connection {
  del(Self, Array[String]) -> Result[UInt, Error_]
  drop(Self) -> Unit
  execute(Self, String, Array[RedisParameter]) -> Result[Array[RedisResult], Error_]
  get(Self, String) -> Result[FixedArray[Byte]?, Error_]
  incr(Self, String) -> Result[Int64, Error_]
  open(String) -> Result[Self, Error_]
  publish(Self, String, FixedArray[Byte]) -> Result[Unit, Error_]
  sadd(Self, String, Array[String]) -> Result[UInt, Error_]
  set(Self, String, FixedArray[Byte]) -> Result[Unit, Error_]
  smembers(Self, String) -> Result[Array[String], Error_]
  srem(Self, String, Array[String]) -> Result[UInt, Error_]
}
impl Eq for Connection
impl Show for Connection

pub(all) enum Error_ {
  InvalidAddress
  TooManyConnections
  TypeError
  Other(String)
}
impl Eq for Error_
impl Show for Error_

pub(all) enum RedisParameter {
  Int64(Int64)
  Binary(FixedArray[Byte])
}
impl Eq for RedisParameter
impl Show for RedisParameter

pub(all) enum RedisResult {
  Nil
  Status(String)
  Int64(Int64)
  Binary(FixedArray[Byte])
}
impl Eq for RedisResult
impl Show for RedisResult

// Type aliases

// Traits

